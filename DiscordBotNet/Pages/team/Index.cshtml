@page
@inject PostgreSqlContext DatabaseContext 
@using System.Web
@using DiscordBotNet.Database
@using DiscordBotNet.LegendaryBot.Entities.BattleEntities.Characters
@model DiscordBotNet.Pages.team.Index

@{
    Layout = "Shared/_NavigationLayout";
}

<!DOCTYPE html>

<html>
<head>
    <link rel="stylesheet" type="text/css" href="css/NeutralHref.css">
    <link rel="stylesheet" type="text/css" href="css/Team.css">
    <title>Team</title>
</head>
<body>

<div id="team_main_div" ondrop="AddToTeam( event)"  ondragover="event.preventDefault()">
    @{
        var team = Model.UserData.EquippedPlayerTeam;
        if (team is null)
            team = [];
    }
    @foreach (var i in team)
    {
        <a href="characters/info?characterId=@HttpUtility.UrlEncode(i.Id.ToString())" class="the_href super_character_div character_in_team_div" id="@i.Id.ToString()" draggable="true" ondragstart="dragStart(event)">
            <div class="character_div">
                <img src="@i.ImageRepresentation" class="image_class" draggable="false"/>
                <div class="character_details">
                    <p>Level: @i.Level</p>
                    <p>Name : @i.Name</p>
                </div>
            </div>
        </a>
    }

</div>
<div id="team_select_div">
    <form method="post">
        <label>Switch your teams!</label>
        <select name="teamName">
            @foreach (var i in Model.TeamNames)
            {

                if (Model.UserData.EquippedPlayerTeam.TeamName == i)
                {
                    <option value="@i" selected>@i</option>
                }
                else
                {
                    <option value="@i">@i</option>
                }
          
   
            }
        </select>
        <button type="submit">Switch</button>
    </form>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="js/team.js"></script>
<div id="character_list_div" ondrop="RemoveFromTeam( event)"  ondragover="event.preventDefault()">
    @foreach (var i in Model.UserData.Inventory.OfType<Character>().Where(j => !team.Contains(j)))
    {
        <div class="super_character_div character_in_list_div" id="@i.Id.ToString()" draggable="true" ondragstart="dragStart(event)">
            <a draggable="false" href="characters/info?characterId=@HttpUtility.UrlEncode(i.Id.ToString())" class="character_div the_href">
                <img src="@i.ImageRepresentation" class="image_class" draggable="false"/>
                <div class="character_details">
                    <p>Level: @i.Level</p>
                    <p>Name : @i.Name</p>
                </div>
            </a>
            </div>
    }
</div>

</body>
</html>