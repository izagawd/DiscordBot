@page
@using System.Web
@using DiscordBotNet
@using DiscordBotNet.Database
@using DiscordBotNet.LegendaryBot.Entities.BattleEntities.Characters
@model DiscordBotNet.Pages.characters.info.Index
@inject PostgreSqlContext DatabaseContext
@{
    Layout = "Shared/_NavigationLayout";
}

<!DOCTYPE html>

<html>
<head>
    <link rel="stylesheet" type="text/css" href="/css/CharacterInfo.css">
    
    <title>Info</title>
</head>


<body>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="/js/info.js"></script>
<div id="super_character_div">
    <div style="display: flex;  position: relative;">
        <div id="character_with_blessing" >
            <img style="width: 100px;height: 100px;" src="@Model.Character.ImageUrl"/>
            <div style="margin-left: 30px; margin-right: 30px;">
                <p>Level: @Model.Character.Level</p>
                <p>Name: @Model.Character.Name</p>
            </div>
        </div>
        @{
            var blessing = Model.Character.Blessing;
            var iconUrl = "";
            var id = "";
            var level = 0;
            var name = "None";
            var draggable = false;
            if (blessing is not null)
            {
                name = blessing.Name;
                level = blessing.Level;
                iconUrl = blessing.ImageUrl;
                draggable = true;
                id = blessing.Id.ToString();
            }
        }
        <div ondrop="SetBlessing('@Model.Character.Id.ToString()')" ondragover="event.preventDefault()" style="position: relative; display: flex; border: 3px solid black;" class="equipped" draggable="@draggable.ToString()" id="@id" ondragstart="dragStart(event)">
            <img style="width: 100px;height: 100px;" src="@iconUrl"/>
            <div style="margin-left: 30px; margin-right: 30px;">
                <p>Level: @level</p>
                <p>Name: @name</p>
            </div>
        </div>
    </div>
   
</div>
<div id="character_details" >
    <img  height="400px" src="@(await Website.RenderImageTagAsync(await Model.Character.GetDetailsImageAsync()))">
</div>
<div id="blessing_list_div" ondragover="event.preventDefault()" ondrop="RemoveBlessing('@Model.Character.Id.ToString()')" >
    @foreach (var i in Model.Blessings)
    {
        if (i.Character == Model.Character) continue;
        <div draggable="true" class="not_equipped" id="@i.Id.ToString()" style="margin-bottom: 10px; margin-top: 10px;" ondragstart="dragStart(event)">
            <div class="blessing_div">
          
                    <img src="@i.ImageUrl" class="image_class" draggable="false">
            
                <div class="blessing_details">
                    @if (i.Character is not null)
                    {
                        if (i.Character is Player player)
                        {
                            await player.LoadAsync();
                        }
                        <a href="/characters/info?characterId=@HttpUtility.UrlEncode(i.Character.Id.ToString())">
                            <img src="@i.Character.ImageUrl" style="width: 25px; height: 25px;"/>
                        </a>
                    }
                    <p>Level: @i.Level</p>
                    <p>Name : @i.Name</p>
                </div>
            </div>
        </div>
    }
</div>
</body>
</html>